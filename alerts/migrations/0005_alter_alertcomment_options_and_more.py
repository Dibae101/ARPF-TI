# Generated by Django 5.2 on 2025-04-30 18:36

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('alerts', '0004_geminisuggestion'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='alertcomment',
            options={},
        ),
        migrations.RemoveField(
            model_name='alert',
            name='gemini_suggestion',
        ),
        migrations.RemoveField(
            model_name='geminisuggestion',
            name='feedback_provided_at',
        ),
        migrations.RemoveField(
            model_name='geminisuggestion',
            name='feedback_provided_by',
        ),
        migrations.RemoveField(
            model_name='geminisuggestion',
            name='suggestion',
        ),
        migrations.AddField(
            model_name='alert',
            name='gemini_raw_suggestion',
            field=models.TextField(blank=True, help_text='Gemini AI raw suggestion text about this alert', null=True),
        ),
        migrations.AddField(
            model_name='alertnotificationconfig',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='alertnotificationconfig',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='geminisuggestion',
            name='assessment',
            field=models.CharField(default='No assessment available', help_text='Brief assessment (Yes/No)', max_length=255),
        ),
        migrations.AddField(
            model_name='geminisuggestion',
            name='feedback_timestamp',
            field=models.DateTimeField(blank=True, help_text='When feedback was provided', null=True),
        ),
        migrations.AddField(
            model_name='geminisuggestion',
            name='raw_response',
            field=models.JSONField(default=dict, help_text='Raw response from Gemini API'),
        ),
        migrations.AddField(
            model_name='geminisuggestion',
            name='should_notify',
            field=models.BooleanField(default=False, help_text='Whether Gemini suggests sending a notification'),
        ),
        migrations.AlterField(
            model_name='alertcomment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='alertnotificationconfig',
            name='configuration',
            field=models.JSONField(default=dict, help_text='Additional configuration in JSON format'),
        ),
        migrations.AlterField(
            model_name='alertnotificationconfig',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Whether this notification configuration is active'),
        ),
        migrations.AlterField(
            model_name='alertnotificationconfig',
            name='min_severity',
            field=models.CharField(choices=[('info', 'Informational'), ('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='high', help_text='Minimum severity level to trigger notification', max_length=10),
        ),
        migrations.AlterField(
            model_name='alertnotificationconfig',
            name='name',
            field=models.CharField(help_text='A descriptive name for this configuration', max_length=100),
        ),
        migrations.AlterField(
            model_name='alertnotificationconfig',
            name='notification_type',
            field=models.CharField(choices=[('email', 'Email'), ('slack', 'Slack'), ('webhook', 'Webhook'), ('sms', 'SMS')], help_text='Channel type for notifications', max_length=20),
        ),
        migrations.AlterField(
            model_name='alertnotificationconfig',
            name='recipients',
            field=models.TextField(blank=True, help_text='Recipients for the notification (comma-separated emails, Slack channels, etc.)', null=True),
        ),
        migrations.AlterField(
            model_name='geminisuggestion',
            name='alert',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='gemini_suggestion', to='alerts.alert'),
        ),
        migrations.AlterField(
            model_name='geminisuggestion',
            name='confidence_score',
            field=models.FloatField(default=0.0, help_text='Confidence score (0.0 to 1.0)'),
        ),
        migrations.AlterField(
            model_name='geminisuggestion',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='geminisuggestion',
            name='feedback_notes',
            field=models.TextField(blank=True, help_text='Notes from admin feedback', null=True),
        ),
        migrations.AlterField(
            model_name='geminisuggestion',
            name='feedback_rating',
            field=models.IntegerField(blank=True, help_text='Rating given to this suggestion (1-5)', null=True),
        ),
        migrations.AlterField(
            model_name='geminisuggestion',
            name='reasoning',
            field=models.TextField(default='No reasoning provided', help_text='Reasoning for the assessment'),
        ),
        migrations.AlterField(
            model_name='geminisuggestion',
            name='suggested_actions',
            field=models.TextField(blank=True, help_text='Suggested actions to take', null=True),
        ),
    ]
