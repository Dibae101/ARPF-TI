# Generated by Django 4.2.20 on 2025-04-23 04:20

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DashboardSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('refresh_interval', models.IntegerField(default=30, help_text='Dashboard refresh interval in seconds')),
                ('default_time_range', models.CharField(choices=[('hour', 'Last Hour'), ('day', 'Last 24 Hours'), ('week', 'Last Week'), ('month', 'Last Month')], default='day', max_length=10)),
                ('enable_geo_map', models.BooleanField(default=True)),
                ('enable_realtime_alerts', models.BooleanField(default=True)),
                ('max_items_per_widget', models.IntegerField(default=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Dashboard settings',
            },
        ),
        migrations.CreateModel(
            name='GeoIPCache',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(unique=True)),
                ('country_code', models.CharField(blank=True, max_length=2, null=True)),
                ('country_name', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('isp', models.CharField(blank=True, max_length=255, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='DashboardMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_type', models.CharField(choices=[('request_count', 'Request Count'), ('blocked_count', 'Blocked Request Count'), ('country_distribution', 'Country Distribution'), ('rule_matches', 'Rule Match Count'), ('response_time', 'Average Response Time'), ('threat_score', 'Average Threat Score'), ('active_ips', 'Active IP Addresses')], max_length=30)),
                ('value', models.FloatField(default=0.0)),
                ('aggregation_period', models.CharField(choices=[('minute', 'Per Minute'), ('hour', 'Hourly'), ('day', 'Daily'), ('week', 'Weekly'), ('month', 'Monthly')], max_length=10)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('dimension', models.CharField(blank=True, help_text='Optional dimension (e.g., country code, rule ID)', max_length=255, null=True)),
            ],
            options={
                'indexes': [models.Index(fields=['metric_type', 'aggregation_period', 'timestamp'], name='dashboard_d_metric__97658b_idx'), models.Index(fields=['dimension'], name='dashboard_d_dimensi_2b05cf_idx')],
            },
        ),
    ]
